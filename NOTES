
TODO

  - code cleanup

NEW FEATURES

  - using assumptions
    could work if they have the form "atom ≡ exp"

    although in that case it might be nicer with a general rewrite tactic

    Target example: get sumSquare example working in one call.

  - a light-weight approach to assumptions: handle function types in simplify,
    simplifying both assumptions and goal

    that would require completeness proofs for simplification.

    It works! (Just have to prove completeness...) Can now get sumSquare with
    one call.

    There should be a version that puts the 'id' in --> assumed.

    Handle goals that are not equations in simplification. What simpl should do
    is just traverse the goal and rewrite any natural number terms it can find
    and stitch things up with congruence. Maybe slightly tricky: terms are
    layered.

  - Using a + b ≡ 0 -> a ≡ 0.

  - Dealing with minus.

    Tricky! Needs care with underflow.

  - rewrite tactic

    How would it get the type of the equation to rewrite by? Could do an
    identity function trick and grab the hidden argument.

  - cong tactic

    Idea: traverse atoms and normalise any nat terms inside them

  - Look at "Proving Equalities in a Commutative Ring Done Right in Coq"
    by Grégoire and Mahboubi.

  - Think about regeneralize to other types.

  - Induction tactic.

  - List tactic

  - Combined List and Nat tactic. In the cancel proof there are lots of
    opportunities for reasoning about sum and product.

